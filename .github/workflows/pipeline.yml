name: DevOps pipeline project
on: [push]
jobs: 
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: 'Creating the .env file'  # this file contains the connection string to the mongo DB
        run: |
          touch .env
          echo CONNECTION_STRING="${{ secrets.MONGODB_CONNECTION_STRING }}" >> .env
      - run: npm install
      - run: npm test 
  Build: 
    runs-on: ubuntu-latest
    needs:
         - Test
    steps:
      - name: Checkout 
        uses: actions/checkout@v3
      
      - name: Login to   Docker Hub 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx   # The builder, this is where docker is going to be installed
        uses: docker/setup-buildx-action@v1
      - name: 'Creating the .env file'  # this file contains the connection string to the mongo DB
        run: |
          touch .env
          echo DB_CONNECTION_STRING="${{ secrets.MONGODB_CONNECTION_STRING }}" >> .env
      - name: Build and push
        uses: docker/build-push-action@v2
        
        with:
          context: .
          file: ./Dockerfile
          push: true     # will it push or just build
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/devops-project:${{ github.sha }} # tag of the image
  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Connecting to EC2 machine and deploiement
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.EC2_HOSTNAME }}
          USER_NAME: ubuntu

        run: |
          echo "$AWS_PRIVATE_RSA_KEY" > private_RSA_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${{USER_NAME}}@${{HOSTIP}} '
            sudo docker container stop nest-crud
            sudo docker container rm nest-crud
            sudo docker image rm ${{ secrets.DOCKER_HUB_USERNAME }}/devops-project:{{ github.sha }}
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/devops-project:{{ github.sha }}
            sudo docker run -d -p 3000:3000 --name=nest-crud ${{ secrets.DOCKER_HUB_USERNAME }}/devops-project:{{ github.sha }}
          '